// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmokingCessationSupportPlatform.DataAccessObjects.Contexts;

#nullable disable

namespace SmokingCessationSupportPlatform.DataAccessObjects.Migrations
{
    [DbContext(typeof(SmokingCessationSupportPlatformContext))]
    [Migration("20250706174007_AddPasswordResetToken")]
    partial class AddPasswordResetToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AchievementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"));

                    b.Property<string>("AchievementName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Criteria")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IconURL");

                    b.HasKey("AchievementId")
                        .HasName("PK__Achievem__276330E0F6A208EB");

                    b.HasIndex(new[] { "AchievementName" }, "UQ__Achievem__D668781EB4204BD5")
                        .IsUnique();

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.BlogComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CommentId")
                        .HasName("PK__BlogComm__C3B4DFAACDCFC5E0");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogComments");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.BlogPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PostDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PostId")
                        .HasName("PK__BlogPost__AA12603815E8BAD2");

                    b.HasIndex("UserId");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("CoachID");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CoachId")
                        .HasName("PK__Coaches__F411D9A16BF36547");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.CoachingSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SessionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("CoachID");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SessionDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SessionStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Scheduled");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SessionId")
                        .HasName("PK__Coaching__C9F492703670531E");

                    b.HasIndex("CoachId");

                    b.HasIndex("UserId");

                    b.ToTable("CoachingSessions");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<DateTime?>("FeedbackDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FeedbackType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("New");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDF652645B30");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.MembershipPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DurationDays")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("PlanId")
                        .HasName("PK__Membersh__755C22D773C7B765");

                    b.HasIndex(new[] { "PlanName" }, "UQ__Membersh__46E12F9E5CC49786")
                        .IsUnique();

                    b.ToTable("MembershipPlans");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NotificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NotificationType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32535613C9");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<string>("CurrentStage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PlanName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReasonToQuit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TargetQuitDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PlanId")
                        .HasName("PK__QuitPlan__755C22D7975B45EC");

                    b.HasIndex("UserId");

                    b.ToTable("QuitPlans");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitPlanStage", b =>
                {
                    b.Property<int>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("TargetDate")
                        .HasColumnType("date");

                    b.HasKey("StageId")
                        .HasName("PK__QuitPlan__03EB7AF856A87BE0");

                    b.HasIndex("PlanId");

                    b.ToTable("QuitPlanStages");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitProgress", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressId"));

                    b.Property<int?>("CigarettesSmoked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("DaysSmokingFree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("HealthStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MoneySaved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReportDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ProgressId")
                        .HasName("PK__QuitProg__BAE29C85CB22DA6C");

                    b.HasIndex("UserId");

                    b.ToTable("QuitProgress", (string)null);
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RatingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("RatingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RatingValue")
                        .HasColumnType("int");

                    b.Property<int>("TargetEntityId")
                        .HasColumnType("int")
                        .HasColumnName("TargetEntityID");

                    b.Property<string>("TargetEntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RatingId")
                        .HasName("PK__Ratings__FCCDF85CF6DC9C49");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.SmokingStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<decimal?>("CigaretteCostPerPack")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CigarettesPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PacksPerWeek")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("ReportDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("StatusId")
                        .HasName("PK__SmokingS__C8EE20430EEF8DF0");

                    b.HasIndex("UserId");

                    b.ToTable("SmokingStatus", (string)null);
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserRole")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Member");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC16823A08");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E47CD42352")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534A1B98E62")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.UserAchievement", b =>
                {
                    b.Property<int>("UserAchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserAchievementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAchievementId"));

                    b.Property<int>("AchievementId")
                        .HasColumnType("int")
                        .HasColumnName("AchievementID");

                    b.Property<DateTime?>("DateAchieved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserAchievementId")
                        .HasName("PK__UserAchi__07E627D6FE4EAA92");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.UserMembership", b =>
                {
                    b.Property<int>("UserMembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserMembershipID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserMembershipId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("PlanID");

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserMembershipId")
                        .HasName("PK__UserMemb__5A4E730A2617ACE7");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMemberships");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.BlogComment", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.BlogPost", "Post")
                        .WithMany("BlogComments")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__BlogComme__PostI__5535A963");

                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("BlogComments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__BlogComme__UserI__5629CD9C");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.BlogPost", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("BlogPosts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__BlogPosts__UserI__5165187F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Coach", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "CoachNavigation")
                        .WithOne("Coach")
                        .HasForeignKey("SmokingCessationSupportPlatform.BusinessObjects.Models.Coach", "CoachId")
                        .IsRequired()
                        .HasConstraintName("FK__Coaches__CoachID__59063A47");

                    b.Navigation("CoachNavigation");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.CoachingSession", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.Coach", "Coach")
                        .WithMany("CoachingSessions")
                        .HasForeignKey("CoachId")
                        .IsRequired()
                        .HasConstraintName("FK__CoachingS__Coach__5DCAEF64");

                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("CoachingSessions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CoachingS__UserI__5CD6CB2B");

                    b.Navigation("Coach");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Feedback", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Feedback__UserID__6754599E");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Notification", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__6C190EBB");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.PasswordResetToken", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("PasswordResetTokens")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitPlan", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("QuitPlans")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__QuitPlans__UserI__3A81B327");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitPlanStage", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitPlan", "Plan")
                        .WithMany("QuitPlanStages")
                        .HasForeignKey("PlanId")
                        .IsRequired()
                        .HasConstraintName("FK__QuitPlanS__PlanI__3E52440B");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitProgress", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("QuitProgresses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__QuitProgr__UserI__44FF419A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Rating", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Ratings__UserID__628FA481");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.SmokingStatus", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("SmokingStatuses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__SmokingSt__UserI__36B12243");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.UserAchievement", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.Achievement", "Achievement")
                        .WithMany("UserAchievements")
                        .HasForeignKey("AchievementId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAchie__Achie__4CA06362");

                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAchie__UserI__4BAC3F29");

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.UserMembership", b =>
                {
                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.MembershipPlan", "Plan")
                        .WithMany("UserMemberships")
                        .HasForeignKey("PlanId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMembe__PlanI__32E0915F");

                    b.HasOne("SmokingCessationSupportPlatform.BusinessObjects.Models.User", "User")
                        .WithMany("UserMemberships")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMembe__UserI__31EC6D26");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Achievement", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.BlogPost", b =>
                {
                    b.Navigation("BlogComments");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.Coach", b =>
                {
                    b.Navigation("CoachingSessions");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.MembershipPlan", b =>
                {
                    b.Navigation("UserMemberships");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.QuitPlan", b =>
                {
                    b.Navigation("QuitPlanStages");
                });

            modelBuilder.Entity("SmokingCessationSupportPlatform.BusinessObjects.Models.User", b =>
                {
                    b.Navigation("BlogComments");

                    b.Navigation("BlogPosts");

                    b.Navigation("Coach");

                    b.Navigation("CoachingSessions");

                    b.Navigation("Feedbacks");

                    b.Navigation("Notifications");

                    b.Navigation("PasswordResetTokens");

                    b.Navigation("QuitPlans");

                    b.Navigation("QuitProgresses");

                    b.Navigation("Ratings");

                    b.Navigation("SmokingStatuses");

                    b.Navigation("UserAchievements");

                    b.Navigation("UserMemberships");
                });
#pragma warning restore 612, 618
        }
    }
}
