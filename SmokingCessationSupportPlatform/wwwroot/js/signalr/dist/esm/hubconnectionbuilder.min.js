/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@microsoft/signalr@8.0.7/dist/esm/HubConnectionBuilder.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{DefaultReconnectPolicy}from"./DefaultReconnectPolicy";import{HttpConnection}from"./HttpConnection";import{HubConnection}from"./HubConnection";import{LogLevel}from"./ILogger";import{JsonHubProtocol}from"./JsonHubProtocol";import{NullLogger}from"./Loggers";import{Arg,ConsoleLogger}from"./Utils";const LogLevelNameMapping={trace:LogLevel.Trace,debug:LogLevel.Debug,info:LogLevel.Information,information:LogLevel.Information,warn:LogLevel.Warning,warning:LogLevel.Warning,error:LogLevel.Error,critical:LogLevel.Critical,none:LogLevel.None};function parseLogLevel(e){const o=LogLevelNameMapping[e.toLowerCase()];if(void 0!==o)return o;throw new Error(`Unknown log level: ${e}`)}export class HubConnectionBuilder{configureLogging(e){if(Arg.isRequired(e,"logging"),isLogger(e))this.logger=e;else if("string"==typeof e){const o=parseLogLevel(e);this.logger=new ConsoleLogger(o)}else this.logger=new ConsoleLogger(e);return this}withUrl(e,o){return Arg.isRequired(e,"url"),Arg.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof o?{...this.httpConnectionOptions,...o}:{...this.httpConnectionOptions,transport:o},this}withHubProtocol(e){return Arg.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new DefaultReconnectPolicy(e):this.reconnectPolicy=e:this.reconnectPolicy=new DefaultReconnectPolicy,this}withServerTimeout(e){return Arg.isRequired(e,"milliseconds"),this._serverTimeoutInMilliseconds=e,this}withKeepAliveInterval(e){return Arg.isRequired(e,"milliseconds"),this._keepAliveIntervalInMilliseconds=e,this}withStatefulReconnect(e){return void 0===this.httpConnectionOptions&&(this.httpConnectionOptions={}),this.httpConnectionOptions._useStatefulReconnect=!0,this._statefulReconnectBufferSize=null==e?void 0:e.bufferSize,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const o=new HttpConnection(this.url,e);return HubConnection.create(o,this.logger||NullLogger.instance,this.protocol||new JsonHubProtocol,this.reconnectPolicy,this._serverTimeoutInMilliseconds,this._keepAliveIntervalInMilliseconds,this._statefulReconnectBufferSize)}}function isLogger(e){return void 0!==e.log}
//# sourceMappingURL=/sm/b615fe9e1f84551f572ebc5f3c2a8e740b3295805a20320a5837c5bdb5be6d82.map